{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.3.255.40792",
      "templateHash": "14264630780385813468"
    }
  },
  "parameters": {
    "userObjectID": {
      "type": "string"
    },
    "sqlPassword": {
      "type": "secureString"
    },
    "resourceprefix": {
      "type": "string",
      "defaultValue": "[take(guid(utcNow('u')), 5)]",
      "metadata": {
        "description": "adding prefix to every resource names"
      },
      "minLength": 3,
      "maxLength": 10
    }
  },
  "functions": [],
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2020-10-01",
      "name": "[format('partcomparator-{0}', parameters('resourceprefix'))]",
      "location": "[deployment().location]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "[format('{0}adls', parameters('resourceprefix'))]",
      "resourceGroup": "[format('partcomparator-{0}', parameters('resourceprefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "stroageAccountName": {
            "value": "[replace(replace(toLower(format('{0}adls', parameters('resourceprefix'))), '-', ''), '_', '')]"
          },
          "containerName": {
            "value": "sources"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.3.255.40792",
              "templateHash": "4510856857866958596"
            }
          },
          "parameters": {
            "stroageAccountName": {
              "type": "string"
            },
            "containerName": {
              "type": "string"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2019-06-01",
              "name": "[parameters('stroageAccountName')]",
              "location": "[resourceGroup().location]",
              "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
              },
              "kind": "StorageV2",
              "properties": {
                "isHnsEnabled": true,
                "networkAcls": {
                  "bypass": "AzureServices",
                  "defaultAction": "Allow",
                  "virtualNetworkRules": [],
                  "ipRules": []
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                  "services": {
                    "file": {
                      "enabled": true
                    },
                    "blob": {
                      "enabled": true
                    }
                  },
                  "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2019-06-01",
              "name": "[format('{0}/{1}', parameters('stroageAccountName'), 'default')]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('stroageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2019-06-01",
              "name": "[format('{0}/{1}/{2}', parameters('stroageAccountName'), 'default', parameters('containerName'))]",
              "properties": {
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('stroageAccountName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('stroageAccountName'), 'default')]"
              ]
            }
          ],
          "outputs": {
            "accountURL": {
              "type": "string",
              "value": "[concat(format('https://{0}', parameters('stroageAccountName')), '.dfs.core.windows.net')]"
            },
            "filesystem": {
              "type": "string",
              "value": "[parameters('containerName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('partcomparator-{0}', parameters('resourceprefix')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "[format('{0}partcomparatorsynapse', parameters('resourceprefix'))]",
      "resourceGroup": "[format('partcomparator-{0}', parameters('resourceprefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "adlsStorageAccountURL": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('partcomparator-{0}', parameters('resourceprefix'))), 'Microsoft.Resources/deployments', format('{0}adls', parameters('resourceprefix'))), '2019-10-01').outputs.accountURL.value]"
          },
          "adlsFileSystem": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('partcomparator-{0}', parameters('resourceprefix'))), 'Microsoft.Resources/deployments', format('{0}adls', parameters('resourceprefix'))), '2019-10-01').outputs.filesystem.value]"
          },
          "sqlAdminLoginPassword": {
            "value": "[parameters('sqlPassword')]"
          },
          "sqlAdminLoginId": {
            "value": "sqladmin"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.3.255.40792",
              "templateHash": "6178475494478744246"
            }
          },
          "parameters": {
            "adlsStorageAccountURL": {
              "type": "string"
            },
            "adlsFileSystem": {
              "type": "string"
            },
            "sqlAdminLoginPassword": {
              "type": "secureString"
            },
            "sqlAdminLoginId": {
              "type": "string"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Synapse/workspaces",
              "apiVersion": "2021-03-01",
              "name": "[format('partcomparatorws-{0}', uniqueString(resourceGroup().id))]",
              "tags": {},
              "location": "[resourceGroup().location]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "defaultDataLakeStorage": {
                  "accountUrl": "[parameters('adlsStorageAccountURL')]",
                  "filesystem": "[parameters('adlsFileSystem')]"
                },
                "virtualNetworkProfile": {
                  "computeSubnetId": ""
                },
                "sqlAdministratorLoginPassword": "[parameters('sqlAdminLoginPassword')]",
                "sqlAdministratorLogin": "[parameters('sqlAdminLoginId')]"
              }
            },
            {
              "type": "Microsoft.Synapse/workspaces/firewallRules",
              "apiVersion": "2021-03-01",
              "name": "[format('{0}/partcomparatorws-firewall', format('partcomparatorws-{0}', uniqueString(resourceGroup().id)))]",
              "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "255.255.255.255"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', format('partcomparatorws-{0}', uniqueString(resourceGroup().id)))]"
              ]
            },
            {
              "type": "Microsoft.Synapse/workspaces/bigDataPools",
              "apiVersion": "2021-03-01",
              "name": "[format('{0}/{1}', format('partcomparatorws-{0}', uniqueString(resourceGroup().id)), 'sparkpool1')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "sparkVersion": "2.4",
                "nodeCount": 3,
                "nodeSize": "Large",
                "nodeSizeFamily": "MemoryOptimized",
                "autoScale": {
                  "enabled": true,
                  "minNodeCount": 3,
                  "maxNodeCount": 15
                },
                "autoPause": {
                  "enabled": true,
                  "delayInMinutes": 15
                },
                "dynamicExecutorAllocation": {
                  "enabled": true
                },
                "provisioningState": "Succeeded"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', format('partcomparatorws-{0}', uniqueString(resourceGroup().id)))]"
              ]
            }
          ],
          "outputs": {
            "identity": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Synapse/workspaces', format('partcomparatorws-{0}', uniqueString(resourceGroup().id))), '2021-03-01', 'full').identity.principalId]"
            },
            "synapseWorkspaceName": {
              "type": "string",
              "value": "[format('partcomparatorws-{0}', uniqueString(resourceGroup().id))]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('partcomparator-{0}', parameters('resourceprefix'))), 'Microsoft.Resources/deployments', format('{0}adls', parameters('resourceprefix')))]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('partcomparator-{0}', parameters('resourceprefix')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "StorageRoleDeploymentResource",
      "resourceGroup": "[format('partcomparator-{0}', parameters('resourceprefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "synapseIdentity": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('partcomparator-{0}', parameters('resourceprefix'))), 'Microsoft.Resources/deployments', format('{0}partcomparatorsynapse', parameters('resourceprefix'))), '2019-10-01').outputs.identity.value]"
          },
          "synapseName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('partcomparator-{0}', parameters('resourceprefix'))), 'Microsoft.Resources/deployments', format('{0}partcomparatorsynapse', parameters('resourceprefix'))), '2019-10-01').outputs.synapseWorkspaceName.value]"
          },
          "userObjectID": {
            "value": "[parameters('userObjectID')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.3.255.40792",
              "templateHash": "13809396165384522851"
            }
          },
          "parameters": {
            "synapseIdentity": {
              "type": "string"
            },
            "synapseName": {
              "type": "string"
            },
            "userObjectID": {
              "type": "string"
            }
          },
          "functions": [],
          "variables": {
            "roleIDStorageBlobDataContributor": "ba92f5b4-2d11-453d-a403-e96b0029c9fe",
            "storageRoleID_sp": "[guid(format('storagerolesp-{0}', uniqueString(resourceGroup().name)))]",
            "storageRoleID_user": "[guid(format('storageroleuser-{0}', resourceGroup().name))]"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "name": "[variables('storageRoleID_sp')]",
              "properties": {
                "principalId": "[parameters('synapseIdentity')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('roleIDStorageBlobDataContributor'))]",
                "principalType": "ServicePrincipal"
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "name": "[variables('storageRoleID_user')]",
              "properties": {
                "principalId": "[parameters('userObjectID')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('roleIDStorageBlobDataContributor'))]",
                "principalType": "User"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('partcomparator-{0}', parameters('resourceprefix')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('partcomparator-{0}', parameters('resourceprefix'))), 'Microsoft.Resources/deployments', format('{0}partcomparatorsynapse', parameters('resourceprefix')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "pid-740ba6b5-168a-5abb-8df4-ff0de6a9d5ee",
      "resourceGroup": "[format('partcomparator-{0}', parameters('resourceprefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {},
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.3.255.40792",
              "templateHash": "16652949447310441715"
            }
          },
          "functions": [],
          "resources": []
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('partcomparator-{0}', parameters('resourceprefix')))]"
      ]
    }
  ],
  "outputs": {
    "resourcegroupName": {
      "type": "string",
      "value": "[format('partcomparator-{0}', parameters('resourceprefix'))]"
    },
    "storageAccountName": {
      "type": "string",
      "value": "[format('{0}adls', parameters('resourceprefix'))]"
    },
    "synapseworkspaceName": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('partcomparator-{0}', parameters('resourceprefix'))), 'Microsoft.Resources/deployments', format('{0}partcomparatorsynapse', parameters('resourceprefix'))), '2019-10-01').outputs.synapseWorkspaceName.value]"
    }
  }
}